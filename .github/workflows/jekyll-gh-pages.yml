name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42 # v1.161.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
          JOTFORM_API_KEY: ${{ secrets.JOTFORM_API_KEY }}
      - name: Create secure form submission page
        run: |
          # Remove any existing form submission page and create fresh
          rm -f _site/api/submit-form.html
          mkdir -p _site/api
          
          # Generate form submission page using JotForm's direct submission (no API key needed)
          cat > _site/api/submit-form.html << 'FORM_EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <meta charset="utf-8">
              <title>Form Submission</title>
              <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
              <style>
                  body { font-family: Arial, sans-serif; display: flex; justify-content: center; align-items: center; min-height: 100vh; margin: 0; background-color: #f5f5f5; }
                  .container { text-align: center; padding: 2rem; background: white; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); max-width: 500px; }
                  .spinner { border: 4px solid #f3f3f3; border-top: 4px solid #3498db; border-radius: 50%; width: 40px; height: 40px; animation: spin 1s linear infinite; margin: 0 auto 1rem; }
                  @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
                  .success { color: #28a745; }
                  .error { color: #dc3545; }
                  .back-button { margin-top: 20px; padding: 10px 20px; background: #007bff; color: white; text-decoration: none; border-radius: 4px; display: inline-block; }
                  .debug-info { margin-top: 20px; padding: 15px; background: #f8f9fa; border-radius: 4px; text-align: left; font-size: 12px; }
              </style>
          </head>
          <body>
              <div class="container">
                  <div id="loading" class="loading">
                      <div class="spinner"></div>
                      <h2 id="status">Processing your submission...</h2>
                  </div>
                  <div id="result" style="display: none;">
                      <h2 id="result-title"></h2>
                      <p id="result-message"></p>
                      <a href="/" class="back-button">← Back to Site</a>
                      <div id="debug-info" class="debug-info" style="display: none;">
                          <strong>Debug Information:</strong>
                          <pre id="debug-content"></pre>
                      </div>
                  </div>
              </div>
              
              <script>
                  $(document).ready(function() {
                      var formData = JSON.parse(localStorage.getItem('pendingFormSubmission') || '{}');
                      localStorage.removeItem('pendingFormSubmission');
                      
                      console.log('Form Data Retrieved:', formData);
                      
                      if (Object.keys(formData).length === 0) {
                          showResult('Error', 'No form data found. Please try submitting the form again.', 'error');
                          return;
                      }
                      
                      // Use JotForm's direct submission endpoint (no API key needed)
                      var jotformData = {
                          'q2_fullname0[first]': formData.name || '',
                          'q3_email1': formData.email || '',
                          'q4_phone2[full]': formData.phone || '',
                          'q5_textbox3': formData.subject || '',
                          'q6_textarea4': formData.message || formData.data || ''
                      };
                      
                      console.log('Submitting to JotForm:', jotformData);
                      
                      $.ajax({
                          type: 'POST',
                          url: 'https://submit.jotform.com/submit/252234186942055',
                          data: jotformData,
                          success: function(data, textStatus, xhr) {
                              console.log('JotForm Success Response:', {
                                  data: data,
                                  status: xhr.status,
                                  statusText: xhr.statusText,
                                  responseText: xhr.responseText
                              });
                              showResult('Success!', 'Thank you! Your message has been sent successfully.', 'success');
                              showDebugInfo({
                                  status: 'SUCCESS',
                                  response: data,
                                  formData: formData,
                                  jotformData: jotformData
                              });
                          },
                          error: function(xhr, textStatus, errorThrown) {
                              console.error('JotForm Error Response:', {
                                  status: xhr.status,
                                  statusText: xhr.statusText,
                                  responseText: xhr.responseText,
                                  textStatus: textStatus,
                                  errorThrown: errorThrown
                              });
                              
                              if (xhr.status === 0) {
                                  showResult('Connection Error', 'Unable to connect to the form service. Please check your internet connection and try again.', 'error');
                              } else if (xhr.status >= 400 && xhr.status < 500) {
                                  showResult('Submission Error', 'There was an error with your form submission. Please check your information and try again.', 'error');
                              } else if (xhr.status >= 500) {
                                  showResult('Server Error', 'The form service is temporarily unavailable. Please try again later.', 'error');
                              } else {
                                  showResult('Unexpected Error', 'An unexpected error occurred. Please try again.', 'error');
                              }
                              
                              showDebugInfo({
                                  status: 'ERROR',
                                  error: {
                                      status: xhr.status,
                                      statusText: xhr.statusText,
                                      responseText: xhr.responseText,
                                      textStatus: textStatus,
                                      errorThrown: errorThrown
                                  },
                                  formData: formData,
                                  jotformData: jotformData
                              });
                          }
                      });
                  });
                  
                  function showResult(title, message, type) {
                      $('#loading').hide();
                      $('#result-title').text(title).addClass(type);
                      $('#result-message').text(message);
                      $('#result').show();
                  }
                  
                  function showDebugInfo(info) {
                      $('#debug-content').text(JSON.stringify(info, null, 2));
                      $('#debug-info').show();
                  }
              </script>
          </body>
          </html>
          FORM_EOF
          
          echo "✅ Secure form submission page created (no API key required)"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4